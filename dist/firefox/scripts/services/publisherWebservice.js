!function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function getXml(string){var parser=new DOMParser,document=parser.parseFromString(string,"application/xml");return _hasParseError(document)&&(console.error("XML PARSER ERROR: Could not parse Response from Webservice",document),console.error(string)),document}function _hasParseError(parsedDocument){var parser=new DOMParser,errorneousParse=parser.parseFromString("<","text/xml"),parsererrorNS=errorneousParse.getElementsByTagName("parsererror")[0].namespaceURI;return"http://www.w3.org/1999/xhtml"===parsererrorNS?parsedDocument.getElementsByTagName("parsererror").length>0:parsedDocument.getElementsByTagNameNS(parsererrorNS,"parsererror").length>0}function _sendRequest(requestBody,url,soap_action){return new Promise(function(resolve,reject){console.log("new xhr",url,soap_action);var xhr=new XMLHttpRequest;xhr.onloadend=function(event){200===xhr.status?resolve(xhr.responseText):(console.debug("ERROR response with status "+xhr.status),console.debug(xhr.response),reject(xhr))},xhr.open("post",url),xhr.setRequestHeader("SOAPAction",soap_action),xhr.setRequestHeader("Content-Type","text/xml; charset=utf-8"),xhr.send(requestBody)})}var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_storage=require("../utils/storage"),_storage2=_interopRequireDefault(_storage),publisherId=null,webservicePassword=null;_storage2["default"].get("publisherId",function(results){publisherId=results.publisherId||null}),_storage2["default"].get("webservicePassword",function(results){webservicePassword=results.webservicePassword||null});var myProgramsCache=[],token=!1,validUntil=!1,_tokenMustBeRefreshed=function(){var now=Math.floor(Date.now())+12e4;return console.log("token is  valid  for another ",(validUntil-now)/1e3," seconds"),token===!1?(console.log("token is not set"),!0):validUntil===!1||validUntil<now},getToken=function(){return new Promise(function(resolve,reject){_tokenMustBeRefreshed()?(console.log("token will get refreshed"),Logon().then(function(response){var xmlDoc=getXml(response),localToken=xmlDoc.getElementsByTagName("CredentialToken")[0].firstChild.nodeValue;token=localToken,_getTokenExpiration(token).then(function(tokenExpResult){var xmlDoc=getXml(tokenExpResult),expirationDate=xmlDoc.getElementsByTagName("ExpirationDate")[0].firstChild.nodeValue;validUntil=new Date(expirationDate).getTime(),resolve(localToken)},function(error){console.log("error in get token expiration ",error),validUntil=0,reject(error)})},function(response){console.log("error getting token"),reject(response)})):resolve(token)})},_removeToken=function(){token=!1,validUntil=!1},generateBodyForMyPrograms=function(token,page){return'<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:svc="http://affilinet.framework.webservices/Svc" xmlns:pub="http://affilinet.framework.webservices/types/PublisherProgram" xmlns:arr="http://schemas.microsoft.com/2003/10/Serialization/Arrays"><soapenv:Header/><soapenv:Body><svc:GetProgramsRequest><svc:CredentialToken>'+token+"</svc:CredentialToken><svc:DisplaySettings><pub:CurrentPage>"+page+"</pub:CurrentPage><pub:PageSize>100</pub:PageSize></svc:DisplaySettings><svc:GetProgramsQuery><pub:PartnershipStatus><pub:ProgramPartnershipStatusEnum>Active</pub:ProgramPartnershipStatusEnum></pub:PartnershipStatus></svc:GetProgramsQuery></svc:GetProgramsRequest></soapenv:Body></soapenv:Envelope>"},Logon=function(){return console.log("in logon"),new Promise(function(resolve,reject){var requestBody='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:svc="http://affilinet.framework.webservices/Svc" xmlns:typ="http://affilinet.framework.webservices/types"><soapenv:Header/><soapenv:Body><svc:LogonRequestMsg><typ:Username>'+publisherId.trim()+"</typ:Username><typ:Password>"+webservicePassword.trim()+"</typ:Password><typ:WebServiceType>Publisher</typ:WebServiceType></svc:LogonRequestMsg></soapenv:Body></soapenv:Envelope>";_sendRequest(requestBody,"https://api.affili.net/V2.0/Logon.svc","http://affilinet.framework.webservices/Svc/ServiceContract1/Logon").then(resolve,reject)})},_getTokenExpiration=function(token){return console.log("in GetTokenExpiration"),new Promise(function(resolve,reject){var requestBody='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:svc="http://affilinet.framework.webservices/Svc">   <soapenv:Header/>   <soapenv:Body>      <svc:CredentialToken>'+token+"</svc:CredentialToken>   </soapenv:Body></soapenv:Envelope>";_sendRequest(requestBody,"https://api.affili.net/V2.0/Logon.svc","http://affilinet.framework.webservices/Svc/AuthenticationContract/GetIdentifierExpiration").then(resolve,reject)})},_fetchAllMyProgramsPages=function _fetchAllMyProgramsPages(totalPages,token){var startWith=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;_fetchOneOfMyProgramsPage(startWith,token).then(function(response){for(var xmlDoc=getXml(response),ProgramCollection=xmlDoc.getElementsByTagName("ProgramCollection")[0],items=ProgramCollection.getElementsByTagName("a:Program"),i=0;i<items.length;i++){var newProgram={programId:items[i].getElementsByTagName("a:ProgramId")[0].firstChild.nodeValue,programTitle:items[i].getElementsByTagName("a:ProgramTitle")[0].firstChild.nodeValue};myProgramsCache.push(newProgram)}startWith<totalPages?_fetchAllMyProgramsPages(totalPages,token,startWith+1):(console.log("INFO: Webservice returned",myProgramsCache.length," Program Partnership"),_storage2["default"].set({myPrograms:myProgramsCache}),console.debug("added page "+myProgramsCache.length+" Programs of myPrograms"))})},_fetchOneOfMyProgramsPage=function(page,token){return console.log("Send Request for page",page),_sendRequest(generateBodyForMyPrograms(token,page),"https://api.affili.net/V2.0/PublisherProgram.svc","http://affilinet.framework.webservices/Svc/PublisherProgramContract/SearchPrograms")},PublisherWebservice=function(){function PublisherWebservice(){_classCallCheck(this,PublisherWebservice),console.log("created Publisher Webservice")}return _createClass(PublisherWebservice,[{key:"GetLinkedAccounts",value:function(){return console.debug("in Method GetLinkedAccounts"),new Promise(function(resolve,reject){getToken().then(function(response){console.debug("in Method GetLinkedAccounts:success");var requestBody='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:svc="http://affilinet.framework.webservices/Svc"><soapenv:Header/><soapenv:Body><svc:GetLinkedAccountsRequest><svc:CredentialToken>'+response+"</svc:CredentialToken><svc:PublisherId>"+publisherId+"</svc:PublisherId></svc:GetLinkedAccountsRequest></soapenv:Body></soapenv:Envelope>";console.debug("LinkedAccounts Request:"),_sendRequest(requestBody,"http://api.affili.net/V2.0/AccountService.svc","http://affilinet.framework.webservices/Svc/AccountServiceContract/GetLinkedAccounts").then(resolve,reject)},function(){console.debug("in Method GetLinkedAccounts:error"),reject()})})}},{key:"GetPublisherSummary",value:function(){return console.debug("in Method GetPublisherSummary"),new Promise(function(resolve,reject){getToken().then(function(response){var requestBody='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:svc="http://affilinet.framework.webservices/Svc"><soapenv:Header/><soapenv:Body><svc:CredentialToken>'+response+"</svc:CredentialToken></soapenv:Body></soapenv:Envelope>";_sendRequest(requestBody,"http://api.affili.net/V2.0/AccountService.svc","http://affilinet.framework.webservices/Svc/AccountServiceContract/GetPublisherSummary").then(resolve,reject)},function error(error){console.debug("Error in Method GetPublisherSummary",error),reject(error)})})}},{key:"UpdateMyPrograms",value:function(){_storage2["default"].remove("myPrograms"),myProgramsCache=[],getToken().then(function(token){var page=1;_sendRequest(generateBodyForMyPrograms(token,page),"https://api.affili.net/V2.0/PublisherProgram.svc","http://affilinet.framework.webservices/Svc/PublisherProgramContract/SearchPrograms").then(function(response){var xmlDoc=getXml(response),totalResults=xmlDoc.getElementsByTagName("TotalResults")[0].firstChild.nodeValue,ProgramCollection=xmlDoc.getElementsByTagName("ProgramCollection")[0],totalPages=(ProgramCollection.getElementsByTagName("a:Program").length,Math.ceil(totalResults/100));console.log("INFO: Webservice Reports ",totalResults," Partnerships on ",totalPages," Pages.. fetching data from webserivice"),_fetchAllMyProgramsPages(totalPages,token,1)},console.debug)},function(){console.debug("in Method GetAllPrograms:error")})}},{key:"Reset",value:function(){_removeToken()}},{key:"UpdateCredentials",value:function(pub,pass){publisherId=pub,webservicePassword=pass}}]),PublisherWebservice}(),publisherWebservice=new PublisherWebservice;module.exports=publisherWebservice},{"../utils/storage":3}],2:[function(require,module,exports){"use strict";function Extension(){var _this=this;apis.forEach(function(api){_this[api]=null;try{chrome[api]&&(_this[api]=chrome[api])}catch(e){}try{window[api]&&(_this[api]=window[api])}catch(e){}try{browser[api]&&(_this[api]=browser[api])}catch(e){}try{_this.api=browser.extension[api]}catch(e){}});try{browser&&browser.runtime&&(this.runtime=browser.runtime)}catch(e){}try{browser&&browser.browserAction&&(this.browserAction=browser.browserAction)}catch(e){}}var apis=["alarms","bookmarks","browserAction","commands","contextMenus","cookies","downloads","events","extension","extensionTypes","history","i18n","idle","notifications","pageAction","runtime","storage","tabs","webNavigation","webRequest","windows"],ext=new Extension;module.exports=ext},{}],3:[function(require,module,exports){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _ext=require("./ext"),_ext2=_interopRequireDefault(_ext),storage=_ext2["default"].storage.local;module.exports=storage},{"./ext":2}]},{},[1]);